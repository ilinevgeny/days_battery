services:
  traefik:
    image: traefik:v2.11
    container_name: days_battery_traefik
    command:
      # Enable Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Entrypoint - only HTTP on port 80
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    restart: unless-stopped

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: days_battery_php
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      APP_ENV: ${APP_ENV:-prod}
      APP_SECRET: ${APP_SECRET}
      SESSION_HANDLER_DSN: ${SESSION_HANDLER_DSN}
      MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN}
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    restart: unless-stopped
    entrypoint: ["/var/www/docker/php/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.25-alpine
    container_name: days_battery_nginx
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.days-battery.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.days-battery.entrypoints=web"
      - "traefik.http.services.days-battery.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: days_battery_postgres
    environment:
      POSTGRES_DB: days_battery
      POSTGRES_USER: app
      # IMPORTANT: Change this password! Use the same password in .env.prod DATABASE_URL
      POSTGRES_PASSWORD: ChangeMe_SecurePassword123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: days_battery_redis
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
