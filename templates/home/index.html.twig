{% extends 'base.html.twig' %}

{% block title %}Daily Battery - Track Your Daily Time{% endblock %}

{% block inline_styles %}
{{ parent() }}

.main-card {
    background: white;
    border-radius: 20px;
    padding: 60px 40px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    text-align: center;
}

.logo {
    font-size: 80px;
    margin-bottom: 20px;
}

.main-title {
    font-size: 42px;
    font-weight: 700;
    color: #333;
    margin-bottom: 15px;
}

.main-subtitle {
    font-size: 18px;
    color: #6c757d;
    margin-bottom: 40px;
    line-height: 1.6;
}

.claim-form {
    max-width: 400px;
    margin: 0 auto 30px;
}

.form-group {
    margin-bottom: 20px;
}

.form-label {
    display: block;
    text-align: left;
    font-weight: 600;
    color: #333;
    margin-bottom: 8px;
    font-size: 14px;
}

.form-input {
    width: 100%;
    padding: 14px 16px;
    border: 2px solid #e9ecef;
    border-radius: 10px;
    font-size: 16px;
    transition: border-color 0.2s;
    font-family: inherit;
}

.form-input:focus {
    outline: none;
    border-color: #667eea;
}

.form-input.error {
    border-color: #f56565;
}

.form-hint {
    display: block;
    text-align: left;
    font-size: 12px;
    color: #6c757d;
    margin-top: 4px;
}

.error-message {
    display: none;
    background: #FEE;
    color: #c53030;
    padding: 10px 14px;
    border-radius: 8px;
    font-size: 14px;
    margin-top: 10px;
    text-align: left;
}

.error-message.show {
    display: block;
}

.btn-submit {
    width: 100%;
    padding: 16px 32px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 10px;
    font-weight: 600;
    font-size: 18px;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    font-family: inherit;
}

.btn-submit:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(102, 126, 234, 0.4);
}

.btn-submit:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

.features {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-top: 40px;
    padding-top: 40px;
    border-top: 1px solid #e9ecef;
}

.feature {
    text-align: center;
}

.feature-icon {
    font-size: 36px;
    margin-bottom: 10px;
}

.feature-title {
    font-weight: 600;
    color: #333;
    margin-bottom: 5px;
}

.feature-text {
    font-size: 14px;
    color: #6c757d;
}

.loading {
    display: none;
}

.loading.show {
    display: inline-block;
    margin-left: 10px;
}

@media (max-width: 480px) {
    .main-card {
        padding: 40px 20px;
    }

    .logo {
        font-size: 60px;
    }

    .main-title {
        font-size: 32px;
    }

    .main-subtitle {
        font-size: 16px;
    }

    .features {
        grid-template-columns: 1fr;
    }
}
{% endblock %}

{% block body %}
<div class="main-card">
    <div class="logo">üîã</div>
    <h1 class="main-title">Daily Battery</h1>
    <p class="main-subtitle">
        Track your daily time with a simple manual timer.<br>
        Start when you begin, stop when you take a break.
    </p>

    <form class="claim-form" id="claimForm">
        <div class="form-group">
            <label for="username" class="form-label">Choose Your Username</label>
            <input
                type="text"
                id="username"
                name="username"
                class="form-input"
                placeholder="johndoe"
                minlength="3"
                maxlength="32"
                pattern="[a-zA-Z0-9_-]+"
                required
                autocomplete="off"
            >
            <span class="form-hint">3-32 characters, letters, numbers, underscore and hyphen only</span>
            <div class="error-message" id="errorMessage"></div>
        </div>

        <button type="submit" class="btn-submit" id="submitBtn">
            Get Started
            <span class="loading" id="loading">‚è≥</span>
        </button>
    </form>

    <div class="features">
        <div class="feature">
            <div class="feature-icon">‚è±Ô∏è</div>
            <div class="feature-title">Manual Timer</div>
            <div class="feature-text">Start and stop manually</div>
        </div>
        <div class="feature">
            <div class="feature-icon">üìä</div>
            <div class="feature-title">Track Progress</div>
            <div class="feature-text">See your daily usage</div>
        </div>
        <div class="feature">
            <div class="feature-icon">üîó</div>
            <div class="feature-title">Share Status</div>
            <div class="feature-text">Get a public link</div>
        </div>
    </div>
</div>

<script>
document.getElementById('claimForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const username = document.getElementById('username').value.trim();
    const submitBtn = document.getElementById('submitBtn');
    const loading = document.getElementById('loading');
    const errorMessage = document.getElementById('errorMessage');
    const usernameInput = document.getElementById('username');

    // Reset error state
    errorMessage.classList.remove('show');
    usernameInput.classList.remove('error');

    // Disable button
    submitBtn.disabled = true;
    loading.classList.add('show');

    try {
        const response = await fetch('/api/claim', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username }),
        });

        const data = await response.json();

        if (response.ok && data.success) {
            // Save user data to session storage
            sessionStorage.setItem('username', data.data.username);
            sessionStorage.setItem('publicHash', data.data.publicHash);
            sessionStorage.setItem('userId', data.data.userId);

            // Redirect to dashboard
            window.location.href = '/dashboard';
        } else {
            // Show error
            errorMessage.textContent = data.error || 'An error occurred. Please try again.';
            errorMessage.classList.add('show');
            usernameInput.classList.add('error');
        }
    } catch (error) {
        errorMessage.textContent = 'Network error. Please check your connection and try again.';
        errorMessage.classList.add('show');
        usernameInput.classList.add('error');
    } finally {
        submitBtn.disabled = false;
        loading.classList.remove('show');
    }
});

// Real-time validation
document.getElementById('username').addEventListener('input', (e) => {
    const value = e.target.value;
    const errorMessage = document.getElementById('errorMessage');

    if (value && !/^[a-zA-Z0-9_-]+$/.test(value)) {
        errorMessage.textContent = 'Only letters, numbers, underscore and hyphen allowed';
        errorMessage.classList.add('show');
        e.target.classList.add('error');
    } else {
        errorMessage.classList.remove('show');
        e.target.classList.remove('error');
    }
});
</script>
{% endblock %}
